{"version":3,"sources":["components/MatchesPage.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","DivApp","Header","header","ButtonReturn","section","img","button","Logo","h3","MatchesPage","useState","id","photo","name","bio","age","matches","setMatches","useEffect","getMatches","axios","get","then","response","data","catch","err","console","log","map","match","DivInfo","Image","DivImage","DivText","ButtonLike","ButtonDeslike","ButtonMatchs","HomePage","profile","setProfile","getProfile","src","onClick","chosse","body","choice","post","chossePerson","App","currentPage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"m0FAIA,IAAMA,EAAYC,IAAOC,IAAV,KASLC,EAASF,IAAOC,IAAV,KAUNE,EAASH,IAAOI,OAAV,KAyDNC,GApDUL,IAAOM,QAAV,KASCN,IAAOO,IAAV,KAOMP,IAAOC,IAAV,KASED,IAAOC,IAAV,KAaMD,IAAOQ,OAAV,KAOMR,IAAOQ,OAAV,KAOER,IAAOQ,OAAV,MAQZC,EAAOT,IAAOU,GAAV,KAwECC,MAzDf,WAAyB,IAAD,EAIUC,mBAAS,CACnC,CACIC,GAAI,GACJC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,IAAK,KAVO,mBAIbC,EAJa,KAIJC,EAJI,KAcpBC,qBAAU,WACNC,MACC,IAEL,IAAMA,EAAa,WACfC,IACCC,IAAI,kFACJC,MAAK,SAACC,GACLN,EAAWM,EAASC,KAAKR,YAE1BS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAIlB,OACI,kBAAC7B,EAAD,KACI,kBAACG,EAAD,KACI,kBAACC,EAAD,KACI,kBAACM,EAAD,mBACA,kBAACJ,EAAD,gBAIR,4BACKa,EAAQa,KAAI,SAAAC,GACT,OACI,4BAAKA,EAAMjB,UAKvB,oC,ykFChJZ,IAAMhB,EAAYC,IAAOC,IAAV,KASLC,EAASF,IAAOC,IAAV,KAUNE,EAASH,IAAOI,OAAV,KAKN6B,EAAUjC,IAAOM,QAAV,KASP4B,EAAQlC,IAAOO,IAAV,KAOL4B,EAAWnC,IAAOC,IAAV,KASRmC,EAAUpC,IAAOC,IAAV,KAaPoC,EAAarC,IAAOQ,OAAV,KAOV8B,EAAgBtC,IAAOQ,OAAV,KAOb+B,EAAevC,IAAOQ,OAAV,KAQZC,EAAOT,IAAOU,GAAV,KA6FC8B,EA/EE,WAAO,IAAD,EAIW5B,mBAAS,CACrCC,GAAI,GACJC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,IAAK,IATY,mBAIZwB,EAJY,KAIHC,EAJG,KAYnBtB,qBAAU,WACRuB,MACC,IAEH,IAAMA,EAAa,WACfrB,IACCC,IAAI,iFACJC,MAAK,SAACC,GACLiB,EAAWjB,EAASC,KAAKe,YAE1Bd,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OA8BlB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,mBACA,kBAACW,EAAD,gBAIJ,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAOK,IAAKH,EAAQ3B,SAExB,kBAAC,EAAD,KACI,2BAAI2B,EAAQ1B,KAAZ,KAAoB0B,EAAQxB,KAC5B,2BAAIwB,EAAQzB,OAGpB,gCACI,kBAAC,EAAD,CAAe6B,QAxBF,WACzBF,MAuBY,KACA,kBAAC,EAAD,CAAYE,QA5BF,YAhBL,SAACC,GAClB,IAAMC,EAAO,CACTlC,GAAK4B,EAAQ5B,GACbmC,OAAQF,GAEZxB,IACC2B,KAAK,uFAAwFF,GAC7FvB,MAAK,WACFmB,OAEHhB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAMhBsB,EAAa,KA2BD,YCvJLC,MAlBf,WAAgB,IAAD,EACyBvC,mBAAS,YADlC,mBACNwC,EADM,KAUb,OAVa,KAWX,6BAEmB,aAAhBA,EAA6B,kBAAC,EAAD,MAAe,kBAAC,EAAD,QCR/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCZNyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdvC,OAAM,SAAAwC,GACLtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.ece1388f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    position: absolute;\r\n    width: 1440px;\r\n    height: 1024px;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: #c4c4c4;\r\n    `\r\n    const DivApp = styled.div`\r\n        diplay: flex;\r\n        position: absolute;\r\n        width: 416px;\r\n        height: 617px;\r\n        left: 512px;\r\n        top: 203px;\r\n        background-color: white;\r\n        border-radius: 34px;\r\n    `\r\n    const Header = styled.header`\r\n        border-bottom: 1px solid black;\r\n        height: 60px;\r\n    `\r\n    \r\n    const DivInfo = styled.section`\r\n        position: absolute;\r\n        width: 343px;\r\n        height: 450px;\r\n        left: -515px;\r\n        top: -200px;\r\n        background-color: #C4C4C4;\r\n        border-radius: 31px;  \r\n    `\r\n    const Image = styled.img`\r\n        position: absolute;\r\n        width: 343px;\r\n        height: 352px;\r\n        left: 0px;\r\n        top: 0px;\r\n    `\r\n    const DivImage = styled.div`\r\n        position: absolute;\r\n        width: 343px;\r\n        height: 470px;\r\n        left: 550px;\r\n        top: 275px;\r\n        background: #C4C4C4;\r\n        border-radius: 31px;\r\n    `\r\n    const DivText = styled.div`\r\n        position: absolute;\r\n        width: 334px;\r\n        height: 60px;\r\n        left: 559px;\r\n        top: 610px;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 22px;\r\n        line-height: 20px;\r\n        color: #000000;\r\n    `\r\n    const ButtonLike = styled.button`\r\n        position: absolute;\r\n        width: 50px;\r\n        height: 50px;\r\n        left: 250px;\r\n        top: 550px;\r\n    `\r\n    const ButtonDeslike = styled.button`\r\n        position: absolute;\r\n        width: 50px;\r\n        height: 50px;\r\n        left: 100px;\r\n        top: 550px;\r\n    `\r\n    const ButtonReturn = styled.button`\r\n        position: absolute;\r\n        width: 60px;\r\n        height: 40px;\r\n        left: 15px;\r\n        top: 15px;\r\n        \r\n    `\r\n    const Logo = styled.h3`\r\n        position: absolute;\r\n        left: 100px;\r\n        top: -20px;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        font-size: 36px;\r\n        line-height: 38px;\r\n        text-align: center;\r\n        color: black;\r\n    `\r\n\r\n\r\n\r\nfunction MatchesPage () {\r\n\r\n    \r\n\r\n    const [matches, setMatches] = useState([\r\n        {\r\n            id: \"\",\r\n            photo: \"\",\r\n            name: \"\",\r\n            bio: \"\",\r\n            age: 0\r\n       }\r\n    ])\r\n   \r\n    useEffect(() => {\r\n        getMatches()\r\n      }, [])\r\n\r\n    const getMatches = () => {\r\n        axios\r\n        .get(\"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/thiago/matches\")\r\n        .then((response) => {\r\n          setMatches(response.data.matches)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }  \r\n\r\n    return (\r\n        <Container>\r\n            <DivApp>\r\n                <Header>\r\n                    <Logo>astroMATCH</Logo>\r\n                    <ButtonReturn>\r\n                        return\r\n                    </ButtonReturn>\r\n                </Header>\r\n            <ul>\r\n                {matches.map(match => {\r\n                    return(\r\n                        <li>{match.name}</li>\r\n                    )\r\n                })}\r\n\r\n            </ul>\r\n            <footer>\r\n               \r\n            </footer>\r\n            </DivApp>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default MatchesPage","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport MatchesPage from './MatchesPage';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    position: absolute;\r\n    width: 1440px;\r\n    height: 1024px;\r\n    left: 0;\r\n    top: 0;\r\n    background-color: #c4c4c4;\r\n    `\r\n    const DivApp = styled.div`\r\n        diplay: flex;\r\n        position: absolute;\r\n        width: 416px;\r\n        height: 617px;\r\n        left: 512px;\r\n        top: 203px;\r\n        background-color: white;\r\n        border-radius: 34px;\r\n    `\r\n    const Header = styled.header`\r\n        border-bottom: 1px solid black;\r\n        height: 60px;\r\n    `\r\n    \r\n    const DivInfo = styled.section`\r\n        position: absolute;\r\n        width: 343px;\r\n        height: 450px;\r\n        left: -515px;\r\n        top: -200px;\r\n        background-color: #C4C4C4;\r\n        border-radius: 31px;  \r\n    `\r\n    const Image = styled.img`\r\n        position: absolute;\r\n        width: 343px;\r\n        height: 352px;\r\n        left: 0px;\r\n        top: 0px;\r\n    `\r\n    const DivImage = styled.div`\r\n        position: absolute;\r\n        width: 343px;\r\n        height: 470px;\r\n        left: 550px;\r\n        top: 275px;\r\n        background: #C4C4C4;\r\n        border-radius: 31px;\r\n    `\r\n    const DivText = styled.div`\r\n        position: absolute;\r\n        width: 334px;\r\n        height: 60px;\r\n        left: 559px;\r\n        top: 610px;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 22px;\r\n        line-height: 20px;\r\n        color: #000000;\r\n    `\r\n    const ButtonLike = styled.button`\r\n        position: absolute;\r\n        width: 50px;\r\n        height: 50px;\r\n        left: 250px;\r\n        top: 550px;\r\n    `\r\n    const ButtonDeslike = styled.button`\r\n        position: absolute;\r\n        width: 50px;\r\n        height: 50px;\r\n        left: 100px;\r\n        top: 550px;\r\n    `\r\n    const ButtonMatchs = styled.button`\r\n        position: absolute;\r\n        width: 60px;\r\n        height: 40px;\r\n        left: 340px;\r\n        top: 15px;\r\n        \r\n    `\r\n    const Logo = styled.h3`\r\n        position: absolute;\r\n        left: 100px;\r\n        top: -20px;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        font-size: 36px;\r\n        line-height: 38px;\r\n        text-align: center;\r\n        color: black;\r\n    `\r\n\r\n\r\nconst HomePage = () => {\r\n    \r\n    \r\n    \r\n    const [profile, setProfile] = useState({\r\n      id: \"\",\r\n      photo: \"\",\r\n      name: \"\",\r\n      bio: \"\",\r\n      age: 0\r\n    })\r\n    \r\n    useEffect(() => {\r\n      getProfile()\r\n    }, [])\r\n  \r\n    const getProfile = () => {\r\n        axios\r\n        .get(\"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/thiago/person\")\r\n        .then((response) => {\r\n          setProfile(response.data.profile)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const chossePerson = (chosse) => {\r\n        const body = {\r\n            id: (profile.id),\r\n            choice: chosse\r\n    }\r\n        axios\r\n        .post(\"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/thiago/choose-person\", body)\r\n        .then(() => {\r\n            getProfile()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    \r\n    const handleLikeprofile = () => {\r\n        chossePerson(true)\r\n    }\r\n    const handleDeslikeProfile = () => {\r\n        getProfile()\r\n    }\r\n\r\n    \r\n    return (\r\n        <Container>\r\n            <DivApp>\r\n                <Header>\r\n                    <Logo>astroMATCH</Logo>\r\n                    <ButtonMatchs>\r\n                        matchs\r\n                    </ButtonMatchs>\r\n                </Header>\r\n                <DivInfo>\r\n                    <DivImage>\r\n                        <Image src={profile.photo} />\r\n                    </DivImage>\r\n                    <DivText>\r\n                        <p>{profile.name}, {profile.age}</p>\r\n                        <p>{profile.bio}</p>\r\n                    </DivText>\r\n                </DivInfo>\r\n                <footer>\r\n                    <ButtonDeslike onClick={handleDeslikeProfile}>X</ButtonDeslike>\r\n                    <ButtonLike onClick={handleLikeprofile}>like</ButtonLike>\r\n                </footer>\r\n            </DivApp>\r\n        </Container>\r\n    )\r\n}\r\nexport default HomePage","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport MatchesPage from './components/MatchesPage';\r\nimport HomePage from './components/HomePage'\r\n\r\n\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState('showPage')\r\n\r\n  const changePage = () => {\r\n   if (currentPage === 'showPage') {\r\n    setCurrentPage(MatchesPage)  \r\n  } else {\r\n      setCurrentPage('showPage')\r\n\r\n  }}\r\n  return (\r\n    <div>\r\n      \r\n      {currentPage !== 'showPage' ? <HomePage /> : <MatchesPage /> }\r\n    </div>\r\n  );\r\n  \r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}